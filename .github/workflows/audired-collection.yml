name: Audi RED Data Collection

on:
    workflow_call:
        inputs:
            jest_coverage_artifact:
                description: 'jest artifact name when uploaded'
                required: false
                type: string
            lighthouse_coverage_artifact:
                description: 'lighthouse artifact name when uploaded'
                required: false
                type: string

jobs:
    jest_collection:
        runs-on: ubuntu-latest
        if: ${{ inputs.jest_coverage_artifact }}
        steps:
            - name: Test
              run: |
                echo "TEST ===================="

            - name: Download test report artifact
              uses: actions/download-artifact@v4
              with:
                name: ${{ inputs.jest_coverage_artifact }}
                path: coverage
                github-token: ${{ github.token }}
                repository: ${{ github.repository }}
                # run-id: ${{ github.event.workflow_run.id }}

            - name: Check Jest coverage percentage
              run: |
                LINES=$(jq '.total.lines.pct' < ./coverage/coverage-summary.json)
                STATEMENTS=$(jq '.total.statements.pct' < ./coverage/coverage-summary.json)
                FUNCTIONS=$(jq '.total.functions.pct' < ./coverage/coverage-summary.json)
                BRANCHES=$(jq '.total.branches.pct' < ./coverage/coverage-summary.json)
        
                echo "Line coverage: $LINES%"
                echo "Statement coverage: $STATEMENTS%"
                echo "Function coverage: $FUNCTIONS%"
                echo "Branch coverage: $BRANCHES%"
        
                AVERAGE_COVERAGE=$(echo "($LINES + $STATEMENTS + $FUNCTIONS + $BRANCHES) / 4" | bc -l)
        
                echo "Average coverage: $AVERAGE_COVERAGE%"
        
                # Fail the job if the average coverage is below 80%
                if (( $(echo "$AVERAGE_COVERAGE > 80" | bc -l) )); then
                    echo "Wahoo! Average jest test coverage is above 80%. Assigning gold badge"
                elif (( $(echo "$AVERAGE_COVERAGE > 60" | bc -l) )); then
                    echo "Good job! Results actual is above 60%. Assigning silver badge"
                else
                    echo "Results actual needs to be higher. Assigning bronze badge."
                fi
    
    lighthouse_collection:
        runs-on: ubuntu-latest
        if: ${{ inputs.lighthouse_coverage_artifact }}
        steps:
            - name: Download lighthouse report artifact
              uses: actions/download-artifact@v4
              with:
                name: ${{ inputs.lighthouse_coverage_artifact }}
                path: lighthouse-report
                github-token: ${{ github.token }}
                repository: ${{ github.repository }}
                # run-id: ${{ github.event.workflow_run.id }}
            
            - name: Check lighthouse coverage percentage
              run: |
                # Extract the coverage percentages for lines, statements, functions, and branches
                RESULTS_ACTUAL=$(jq '.[0].actual' < ./lighthouse-report/assertion-results.json)

                if [ -z  "$RESULTS_ACTUAL" ]; then
                    echo "No lighthouse data available"
                else
                    echo "Results actual found: $RESULTS_ACTUAL%"
                    if (( $(echo "$RESULTS_ACTUAL > 80" | bc -l) )); then
                        echo "Results actual is above 80%. Assigning gold badge"
                    elif (( $(echo "$RESULTS_ACTUAL > 60" | bc -l) )); then
                        echo "Results actual is above 60%. Assigning silver badge"
                    else
                        echo "Results actual needs to be higher. Assigning bronze badge."
                    fi
                fi
